openapi: 3.0.3
info:
  title: Matrimonial API
  version: 1.0.0
  description: API for a matrimonial application
servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /users:
    get:
      summary: Get all users
      operationId: getAllUsers
      responses:
        '200':
          description: List of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
        # Other response codes

    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        # Other response codes
    delete:
      summary: Delete all users
      operationId: deleteAllUsers
      responses:
        '204':
          description: All users deleted successfully
        # Other response codes

  /users/{userId}:
    get:
      summary: Get a user by ID
      operationId: getUserById
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
            format: int64
          required: true
          description: ID of the user to retrieve
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        # Other response codes

    put:
      summary: Update a user by ID
      operationId: updateUserById
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
            format: int64
          required: true
          description: ID of the user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        # Other response codes

    delete:
      summary: Delete a user by ID
      operationId: deleteUserById
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
            format: int64
          required: true
          description: ID of the user to delete
      responses:
        '204':
          description: User deleted successfully
        # Other response codes


components:
  schemas:
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        dateOfBirth:
          type: string
          format: date
        height:
          type: integer
        maritalStatus:
          type: string
        religion:
          type: string
        caste:
          type: string
        motherTongue:
          type: string
        educationLevel:
          type: string
        occupation:
          type: string
        annualIncome:
          type: integer
        fatherName:
          type: string
        motherName:
          type: string
        numberOfSiblings:
          type: integer
        familyBackground:
          type: string
        nativePlace:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
